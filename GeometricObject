//GEO OBJECT CLASS

package rajmft5;
	
public abstract class GeometricObject {
		  private String color = "white";
		  private boolean filled;
		  private java.util.Date dateCreated;

		  /** Construct a default geometric object */
		  protected GeometricObject() {
		    dateCreated = new java.util.Date();
		  }

		  /** Construct a geometric object with color and filled value */
		  protected GeometricObject(String color, boolean filled) {
		    dateCreated = new java.util.Date();
		    this.color = color;
		    this.filled = filled;
		  }

		  /** Return color */
		  public String getColor() {
		    return color;
		  }

		  /** Set a new color */
		  public void setColor(String color) {
		    this.color = color;
		  }

		  /** Return filled. Since filled is boolean,
		   *  the get method is named isFilled */
		  public boolean isFilled() {
		    return filled;
		  }

		  /** Set a new filled */
		  public void setFilled(boolean filled) {
		    this.filled = filled;
		  }

		  /** Get dateCreated */
		  public java.util.Date getDateCreated() {
		    return dateCreated;
		  }
		  
		  @Override
		  public String toString() {
		    return "created on " + dateCreated + "\ncolor: " + color +
		      " and filled: " + filled;
		  }

		  /** Abstract method getArea
     * @return  */
		  public abstract double getArea();

		  /** Abstract method getPerimeter
     * @return  */
		  public abstract double getPerimeter();

}



//TRIANGLE CLASS

package rajmft5;


public class Triangle extends GeometricObject {
   	
  private double side1 = 1.0;
	private double side2 = 1.0;
	private double side3 = 1.0;	
	
	
        
  Triangle(){         
  }
        
    Triangle(double side1, double side2, double side3){
		this.side1 = side1;
		this.side2 = side2;
		this.side3 = side3;			
	}
	
      
	public double getArea() {
		double s = (side1 + side2 + side3)/2;
                return Math.sqrt((s*(s-side1)*(s-side2)*(s-side3)));
	}   
        
            
	public double getPerimeter() {		
                return side1 + side2 + side3;
	}
	
	@Override
	public String toString() {
		return "Triangle: side1 = " + side1 + " side2 = " + side2 + " side3 = " + side3;
		
	}
    
 
}




//MAIN CLASS

package rajmft5;

import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.Scanner;



public class Main {

   
    public static void main(String[] args) throws FileNotFoundException, IOException {
        
        System.out.println("TidballMHW5");
	System.out.println("Maddison Tidball");
        System.out.println("CSC 230, Sec 3");
                
  
// Program info
        System.out.println("\nThis program consists of three classes, a main class, the GeometricObject class, and a Triangle\n" +
                                "class.\n" +
                                "The Triangle class extends from the GeometricObject class.\n" +
                                "The user will be asked to enter the 3 sides and the color of the triangle.\n" +
                                "The user will also be asked to enter if the triangle is filled or not by entering a true if it is filled\n" +  
                                " and a false if it not filled\n" +
                                "The results will be printed to the screen and to a file called triangleOut.out");
		
		
	
// Get user input		
	Scanner input = new Scanner(System.in);
	System.out.print("\nEnter the 1st of three sides: ");   
        double side1 = input.nextDouble();
	System.out.print("Enter the 2nd of three sides: ");
	double side2 = input.nextDouble();
	System.out.print("Enter the 3rd of three sides: ");
	double side3 = input.nextDouble();
		
    //Creating reference to Triangle class
        Triangle triangle = new Triangle(side1, side2, side3);
	
		
	Scanner stringColor = new Scanner(System.in);
	System.out.print("Enter the color: ");
	String color = stringColor.nextLine();
	System.out.print(color);
				
	System.out.print("\nEnter a Boolean Value for filled (true or false): ");
	boolean filled = input.nextBoolean();
		
		
// Setting user input 
        triangle.setColor(color);
        triangle.setFilled(filled);
        



// Print to screen
        System.out.println("\nThe color is " + triangle.getColor());
        if (filled){
            System.out.println("The triangle is filled");
        }
        else{
            System.out.println("The triangle is not filled");
        }
        
        System.out.printf("The area of the triangle is %.3f",triangle.getArea());
	System.out.printf("\nThe perimeter is %.3f", triangle.getPerimeter());
        System.out.println();
        System.out.println(triangle.toString());
		
	




// Print and append to file		
							
        try (FileOutputStream output = new FileOutputStream("triangleOut.out",true)) {
            
            byte[] toByte = null;
            String formattedArea = null;
            String formattedPerim = null;
            
      
    //Write color            
            toByte = ("The color is " + triangle.getColor()).getBytes();
            output.write(toByte);
            
    //Write filled        
            if (filled){
                toByte = ("\nThe triangle is filled").getBytes();
                output.write(toByte);
            }
            else{
                toByte = ("\nThe triangle is not filled").getBytes();
                output.write(toByte);
            }
    
    //Write area        
            formattedArea = String.format("\nThe area is %.3f", triangle.getArea());
            toByte = formattedArea.getBytes();
            output.write(toByte);
           
    //Write perimeter        
            formattedPerim = String.format("\nThe perimeter is %.3f",triangle.getPerimeter());
            toByte = formattedPerim.getBytes();
            output.write(toByte);
            
    //Write sides        
            toByte = ("\n" + triangle.toString()).getBytes(); 
            output.write(toByte);
    
    // Add spaces in between each run
            toByte = ("\n\n\n".getBytes());
            output.write(toByte);
            
    
// CLOSE file
            output.close();
    }	
        
        
   }		
 }
 
 
 
 
